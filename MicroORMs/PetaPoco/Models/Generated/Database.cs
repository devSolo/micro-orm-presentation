
// This file was automatically generated by the PetaPoco T4 Template
// Do not make changes directly to this file - edit the template instead
// 
// The following connection settings were used to generate this file
// 
//     Connection String Name: `Chinook`
//     Provider:               `System.Data.SqlClient`
//     Connection String:      `Data Source=.;Initial Catalog=Chinook;Integrated Security=SSPI;`
//     Schema:                 ``
//     Include Views:          `True`

using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using PetaPoco;

namespace Chinook
{
	public partial class ChinookDB : Database
	{
		public ChinookDB() 
			: base("Chinook")
		{
			CommonConstruct();
		}

		public ChinookDB(string connectionStringName) 
			: base(connectionStringName)
		{
			CommonConstruct();
		}
		
		partial void CommonConstruct();
		
		public interface IFactory
		{
			ChinookDB GetInstance();
		}
		
		public static IFactory Factory { get; set; }
        public static ChinookDB GetInstance()
        {
			if (_instance!=null)
				return _instance;
				
			if (Factory!=null)
				return Factory.GetInstance();
			else
				return new ChinookDB();
        }

		[ThreadStatic] static ChinookDB _instance;
		
		public override void OnBeginTransaction()
		{
			if (_instance==null)
				_instance=this;
		}
		
		public override void OnEndTransaction()
		{
			if (_instance==this)
				_instance=null;
		}
        
		public class Record<T> where T:new()
		{
			public static ChinookDB repo { get { return ChinookDB.GetInstance(); } }
			public bool IsNew() { return repo.IsNew(this); }
			public object Insert() { return repo.Insert(this); }
			public int Update(IEnumerable<string> columns) { return repo.Update(this, columns); }
			public static int Update(string sql, params object[] args) { return repo.Update<T>(sql, args); }
			public static int Update(Sql sql) { return repo.Update<T>(sql); }
			public int Delete() { return repo.Delete(this); }
			public static int Delete(string sql, params object[] args) { return repo.Delete<T>(sql, args); }
			public static int Delete(Sql sql) { return repo.Delete<T>(sql); }
			public static int Delete(object primaryKey) { return repo.Delete<T>(primaryKey); }
			public static bool Exists(object primaryKey) { return repo.Exists<T>(primaryKey); }
			public static T SingleOrDefault(object primaryKey) { return repo.SingleOrDefault<T>(primaryKey); }
			public static T SingleOrDefault(string sql, params object[] args) { return repo.SingleOrDefault<T>(sql, args); }
			public static T SingleOrDefault(Sql sql) { return repo.SingleOrDefault<T>(sql); }
			public static T FirstOrDefault(string sql, params object[] args) { return repo.FirstOrDefault<T>(sql, args); }
			public static T FirstOrDefault(Sql sql) { return repo.FirstOrDefault<T>(sql); }
			public static T Single(object primaryKey) { return repo.Single<T>(primaryKey); }
			public static T Single(string sql, params object[] args) { return repo.Single<T>(sql, args); }
			public static T Single(Sql sql) { return repo.Single<T>(sql); }
			public static T First(string sql, params object[] args) { return repo.First<T>(sql, args); }
			public static T First(Sql sql) { return repo.First<T>(sql); }
			public static List<T> Fetch(string sql, params object[] args) { return repo.Fetch<T>(sql, args); }
			public static List<T> Fetch(Sql sql) { return repo.Fetch<T>(sql); }
			public static List<T> Fetch(long page, long itemsPerPage, string sql, params object[] args) { return repo.Fetch<T>(page, itemsPerPage, sql, args); }
			public static List<T> Fetch(long page, long itemsPerPage, Sql sql) { return repo.Fetch<T>(page, itemsPerPage, sql); }
			public static List<T> SkipTake(long skip, long take, string sql, params object[] args) { return repo.SkipTake<T>(skip, take, sql, args); }
			public static List<T> SkipTake(long skip, long take, Sql sql) { return repo.SkipTake<T>(skip, take, sql); }
			public static Page<T> Page(long page, long itemsPerPage, string sql, params object[] args) { return repo.Page<T>(page, itemsPerPage, sql, args); }
			public static Page<T> Page(long page, long itemsPerPage, Sql sql) { return repo.Page<T>(page, itemsPerPage, sql); }
			public static IEnumerable<T> Query(string sql, params object[] args) { return repo.Query<T>(sql, args); }
			public static IEnumerable<T> Query(Sql sql) { return repo.Query<T>(sql); }
			
			private Dictionary<string,bool> ModifiedColumns;
			private void OnLoaded()
			{
				ModifiedColumns = new Dictionary<string,bool>();
			}
			protected void MarkColumnModified(string column_name)
			{
				if (ModifiedColumns!=null)
					ModifiedColumns[column_name]=true;
			}
			public int Update() 
			{ 
				if (ModifiedColumns==null)
					return repo.Update(this); 

				int retv = repo.Update(this, ModifiedColumns.Keys);
				ModifiedColumns.Clear();
				return retv;
			}
			public void Save() 
			{ 
				if (repo.IsNew(this))
					repo.Insert(this);
				else
					Update();
			}
		}
	}
	

    
	[TableName("Customer")]
	[PrimaryKey("CustomerId")]
	[ExplicitColumns]
    public partial class Customer : ChinookDB.Record<Customer>  
    {
        [Column] 
		public int CustomerId 
		{ 
			get
			{
				return _CustomerId;
			}
			set
			{
				_CustomerId = value;
				MarkColumnModified("CustomerId");
			}
		}
		int _CustomerId;

        [Column] 
		public string FirstName 
		{ 
			get
			{
				return _FirstName;
			}
			set
			{
				_FirstName = value;
				MarkColumnModified("FirstName");
			}
		}
		string _FirstName;

        [Column] 
		public string LastName 
		{ 
			get
			{
				return _LastName;
			}
			set
			{
				_LastName = value;
				MarkColumnModified("LastName");
			}
		}
		string _LastName;

        [Column] 
		public string Company 
		{ 
			get
			{
				return _Company;
			}
			set
			{
				_Company = value;
				MarkColumnModified("Company");
			}
		}
		string _Company;

        [Column] 
		public string Address 
		{ 
			get
			{
				return _Address;
			}
			set
			{
				_Address = value;
				MarkColumnModified("Address");
			}
		}
		string _Address;

        [Column] 
		public string City 
		{ 
			get
			{
				return _City;
			}
			set
			{
				_City = value;
				MarkColumnModified("City");
			}
		}
		string _City;

        [Column] 
		public string State 
		{ 
			get
			{
				return _State;
			}
			set
			{
				_State = value;
				MarkColumnModified("State");
			}
		}
		string _State;

        [Column] 
		public string Country 
		{ 
			get
			{
				return _Country;
			}
			set
			{
				_Country = value;
				MarkColumnModified("Country");
			}
		}
		string _Country;

        [Column] 
		public string PostalCode 
		{ 
			get
			{
				return _PostalCode;
			}
			set
			{
				_PostalCode = value;
				MarkColumnModified("PostalCode");
			}
		}
		string _PostalCode;

        [Column] 
		public string Phone 
		{ 
			get
			{
				return _Phone;
			}
			set
			{
				_Phone = value;
				MarkColumnModified("Phone");
			}
		}
		string _Phone;

        [Column] 
		public string Fax 
		{ 
			get
			{
				return _Fax;
			}
			set
			{
				_Fax = value;
				MarkColumnModified("Fax");
			}
		}
		string _Fax;

        [Column] 
		public string Email 
		{ 
			get
			{
				return _Email;
			}
			set
			{
				_Email = value;
				MarkColumnModified("Email");
			}
		}
		string _Email;

        [Column] 
		public int? SupportRepId 
		{ 
			get
			{
				return _SupportRepId;
			}
			set
			{
				_SupportRepId = value;
				MarkColumnModified("SupportRepId");
			}
		}
		int? _SupportRepId;

	}
    
	[TableName("Employee")]
	[PrimaryKey("EmployeeId")]
	[ExplicitColumns]
    public partial class Employee : ChinookDB.Record<Employee>  
    {
        [Column] 
		public int EmployeeId 
		{ 
			get
			{
				return _EmployeeId;
			}
			set
			{
				_EmployeeId = value;
				MarkColumnModified("EmployeeId");
			}
		}
		int _EmployeeId;

        [Column] 
		public string LastName 
		{ 
			get
			{
				return _LastName;
			}
			set
			{
				_LastName = value;
				MarkColumnModified("LastName");
			}
		}
		string _LastName;

        [Column] 
		public string FirstName 
		{ 
			get
			{
				return _FirstName;
			}
			set
			{
				_FirstName = value;
				MarkColumnModified("FirstName");
			}
		}
		string _FirstName;

        [Column] 
		public string Title 
		{ 
			get
			{
				return _Title;
			}
			set
			{
				_Title = value;
				MarkColumnModified("Title");
			}
		}
		string _Title;

        [Column] 
		public int? ReportsTo 
		{ 
			get
			{
				return _ReportsTo;
			}
			set
			{
				_ReportsTo = value;
				MarkColumnModified("ReportsTo");
			}
		}
		int? _ReportsTo;

        [Column] 
		public DateTime? BirthDate 
		{ 
			get
			{
				return _BirthDate;
			}
			set
			{
				_BirthDate = value;
				MarkColumnModified("BirthDate");
			}
		}
		DateTime? _BirthDate;

        [Column] 
		public DateTime? HireDate 
		{ 
			get
			{
				return _HireDate;
			}
			set
			{
				_HireDate = value;
				MarkColumnModified("HireDate");
			}
		}
		DateTime? _HireDate;

        [Column] 
		public string Address 
		{ 
			get
			{
				return _Address;
			}
			set
			{
				_Address = value;
				MarkColumnModified("Address");
			}
		}
		string _Address;

        [Column] 
		public string City 
		{ 
			get
			{
				return _City;
			}
			set
			{
				_City = value;
				MarkColumnModified("City");
			}
		}
		string _City;

        [Column] 
		public string State 
		{ 
			get
			{
				return _State;
			}
			set
			{
				_State = value;
				MarkColumnModified("State");
			}
		}
		string _State;

        [Column] 
		public string Country 
		{ 
			get
			{
				return _Country;
			}
			set
			{
				_Country = value;
				MarkColumnModified("Country");
			}
		}
		string _Country;

        [Column] 
		public string PostalCode 
		{ 
			get
			{
				return _PostalCode;
			}
			set
			{
				_PostalCode = value;
				MarkColumnModified("PostalCode");
			}
		}
		string _PostalCode;

        [Column] 
		public string Phone 
		{ 
			get
			{
				return _Phone;
			}
			set
			{
				_Phone = value;
				MarkColumnModified("Phone");
			}
		}
		string _Phone;

        [Column] 
		public string Fax 
		{ 
			get
			{
				return _Fax;
			}
			set
			{
				_Fax = value;
				MarkColumnModified("Fax");
			}
		}
		string _Fax;

        [Column] 
		public string Email 
		{ 
			get
			{
				return _Email;
			}
			set
			{
				_Email = value;
				MarkColumnModified("Email");
			}
		}
		string _Email;

	}
    
	[TableName("Genre")]
	[PrimaryKey("GenreId")]
	[ExplicitColumns]
    public partial class Genre : ChinookDB.Record<Genre>  
    {
        [Column] 
		public int GenreId 
		{ 
			get
			{
				return _GenreId;
			}
			set
			{
				_GenreId = value;
				MarkColumnModified("GenreId");
			}
		}
		int _GenreId;

        [Column] 
		public string Name 
		{ 
			get
			{
				return _Name;
			}
			set
			{
				_Name = value;
				MarkColumnModified("Name");
			}
		}
		string _Name;

	}
    
	[TableName("Invoice")]
	[PrimaryKey("InvoiceId")]
	[ExplicitColumns]
    public partial class Invoice : ChinookDB.Record<Invoice>  
    {
        [Column] 
		public int InvoiceId 
		{ 
			get
			{
				return _InvoiceId;
			}
			set
			{
				_InvoiceId = value;
				MarkColumnModified("InvoiceId");
			}
		}
		int _InvoiceId;

        [Column] 
		public int CustomerId 
		{ 
			get
			{
				return _CustomerId;
			}
			set
			{
				_CustomerId = value;
				MarkColumnModified("CustomerId");
			}
		}
		int _CustomerId;

        [Column] 
		public DateTime InvoiceDate 
		{ 
			get
			{
				return _InvoiceDate;
			}
			set
			{
				_InvoiceDate = value;
				MarkColumnModified("InvoiceDate");
			}
		}
		DateTime _InvoiceDate;

        [Column] 
		public string BillingAddress 
		{ 
			get
			{
				return _BillingAddress;
			}
			set
			{
				_BillingAddress = value;
				MarkColumnModified("BillingAddress");
			}
		}
		string _BillingAddress;

        [Column] 
		public string BillingCity 
		{ 
			get
			{
				return _BillingCity;
			}
			set
			{
				_BillingCity = value;
				MarkColumnModified("BillingCity");
			}
		}
		string _BillingCity;

        [Column] 
		public string BillingState 
		{ 
			get
			{
				return _BillingState;
			}
			set
			{
				_BillingState = value;
				MarkColumnModified("BillingState");
			}
		}
		string _BillingState;

        [Column] 
		public string BillingCountry 
		{ 
			get
			{
				return _BillingCountry;
			}
			set
			{
				_BillingCountry = value;
				MarkColumnModified("BillingCountry");
			}
		}
		string _BillingCountry;

        [Column] 
		public string BillingPostalCode 
		{ 
			get
			{
				return _BillingPostalCode;
			}
			set
			{
				_BillingPostalCode = value;
				MarkColumnModified("BillingPostalCode");
			}
		}
		string _BillingPostalCode;

        [Column] 
		public decimal Total 
		{ 
			get
			{
				return _Total;
			}
			set
			{
				_Total = value;
				MarkColumnModified("Total");
			}
		}
		decimal _Total;

	}
    
	[TableName("InvoiceLine")]
	[PrimaryKey("InvoiceLineId")]
	[ExplicitColumns]
    public partial class InvoiceLine : ChinookDB.Record<InvoiceLine>  
    {
        [Column] 
		public int InvoiceLineId 
		{ 
			get
			{
				return _InvoiceLineId;
			}
			set
			{
				_InvoiceLineId = value;
				MarkColumnModified("InvoiceLineId");
			}
		}
		int _InvoiceLineId;

        [Column] 
		public int InvoiceId 
		{ 
			get
			{
				return _InvoiceId;
			}
			set
			{
				_InvoiceId = value;
				MarkColumnModified("InvoiceId");
			}
		}
		int _InvoiceId;

        [Column] 
		public int TrackId 
		{ 
			get
			{
				return _TrackId;
			}
			set
			{
				_TrackId = value;
				MarkColumnModified("TrackId");
			}
		}
		int _TrackId;

        [Column] 
		public decimal UnitPrice 
		{ 
			get
			{
				return _UnitPrice;
			}
			set
			{
				_UnitPrice = value;
				MarkColumnModified("UnitPrice");
			}
		}
		decimal _UnitPrice;

        [Column] 
		public int Quantity 
		{ 
			get
			{
				return _Quantity;
			}
			set
			{
				_Quantity = value;
				MarkColumnModified("Quantity");
			}
		}
		int _Quantity;

	}
    
	[TableName("MediaType")]
	[PrimaryKey("MediaTypeId")]
	[ExplicitColumns]
    public partial class MediaType : ChinookDB.Record<MediaType>  
    {
        [Column] 
		public int MediaTypeId 
		{ 
			get
			{
				return _MediaTypeId;
			}
			set
			{
				_MediaTypeId = value;
				MarkColumnModified("MediaTypeId");
			}
		}
		int _MediaTypeId;

        [Column] 
		public string Name 
		{ 
			get
			{
				return _Name;
			}
			set
			{
				_Name = value;
				MarkColumnModified("Name");
			}
		}
		string _Name;

	}
    
	[TableName("Playlist")]
	[PrimaryKey("PlaylistId")]
	[ExplicitColumns]
    public partial class Playlist : ChinookDB.Record<Playlist>  
    {
        [Column] 
		public int PlaylistId 
		{ 
			get
			{
				return _PlaylistId;
			}
			set
			{
				_PlaylistId = value;
				MarkColumnModified("PlaylistId");
			}
		}
		int _PlaylistId;

        [Column] 
		public string Name 
		{ 
			get
			{
				return _Name;
			}
			set
			{
				_Name = value;
				MarkColumnModified("Name");
			}
		}
		string _Name;

	}
    
	[TableName("PlaylistTrack")]
	[ExplicitColumns]
    public partial class PlaylistTrack : ChinookDB.Record<PlaylistTrack>  
    {
        [Column] 
		public int PlaylistId 
		{ 
			get
			{
				return _PlaylistId;
			}
			set
			{
				_PlaylistId = value;
				MarkColumnModified("PlaylistId");
			}
		}
		int _PlaylistId;

        [Column] 
		public int TrackId 
		{ 
			get
			{
				return _TrackId;
			}
			set
			{
				_TrackId = value;
				MarkColumnModified("TrackId");
			}
		}
		int _TrackId;

	}
    
	[TableName("Track")]
	[PrimaryKey("TrackId")]
	[ExplicitColumns]
    public partial class Track : ChinookDB.Record<Track>  
    {
        [Column] 
		public int TrackId 
		{ 
			get
			{
				return _TrackId;
			}
			set
			{
				_TrackId = value;
				MarkColumnModified("TrackId");
			}
		}
		int _TrackId;

        [Column] 
		public string Name 
		{ 
			get
			{
				return _Name;
			}
			set
			{
				_Name = value;
				MarkColumnModified("Name");
			}
		}
		string _Name;

        [Column] 
		public int? AlbumId 
		{ 
			get
			{
				return _AlbumId;
			}
			set
			{
				_AlbumId = value;
				MarkColumnModified("AlbumId");
			}
		}
		int? _AlbumId;

        [Column] 
		public int MediaTypeId 
		{ 
			get
			{
				return _MediaTypeId;
			}
			set
			{
				_MediaTypeId = value;
				MarkColumnModified("MediaTypeId");
			}
		}
		int _MediaTypeId;

        [Column] 
		public int? GenreId 
		{ 
			get
			{
				return _GenreId;
			}
			set
			{
				_GenreId = value;
				MarkColumnModified("GenreId");
			}
		}
		int? _GenreId;

        [Column] 
		public string Composer 
		{ 
			get
			{
				return _Composer;
			}
			set
			{
				_Composer = value;
				MarkColumnModified("Composer");
			}
		}
		string _Composer;

        [Column] 
		public int Milliseconds 
		{ 
			get
			{
				return _Milliseconds;
			}
			set
			{
				_Milliseconds = value;
				MarkColumnModified("Milliseconds");
			}
		}
		int _Milliseconds;

        [Column] 
		public int? Bytes 
		{ 
			get
			{
				return _Bytes;
			}
			set
			{
				_Bytes = value;
				MarkColumnModified("Bytes");
			}
		}
		int? _Bytes;

        [Column] 
		public decimal UnitPrice 
		{ 
			get
			{
				return _UnitPrice;
			}
			set
			{
				_UnitPrice = value;
				MarkColumnModified("UnitPrice");
			}
		}
		decimal _UnitPrice;

	}
    
	[TableName("Address")]
	[PrimaryKey("ShipperID")]
	[ExplicitColumns]
    public partial class Address : ChinookDB.Record<Address>  
    {
        [Column] 
		public int ShipperID 
		{ 
			get
			{
				return _ShipperID;
			}
			set
			{
				_ShipperID = value;
				MarkColumnModified("ShipperID");
			}
		}
		int _ShipperID;

        [Column] 
		public string Line1 
		{ 
			get
			{
				return _Line1;
			}
			set
			{
				_Line1 = value;
				MarkColumnModified("Line1");
			}
		}
		string _Line1;

        [Column] 
		public string Line2 
		{ 
			get
			{
				return _Line2;
			}
			set
			{
				_Line2 = value;
				MarkColumnModified("Line2");
			}
		}
		string _Line2;

        [Column] 
		public string ZipCode 
		{ 
			get
			{
				return _ZipCode;
			}
			set
			{
				_ZipCode = value;
				MarkColumnModified("ZipCode");
			}
		}
		string _ZipCode;

        [Column] 
		public string State 
		{ 
			get
			{
				return _State;
			}
			set
			{
				_State = value;
				MarkColumnModified("State");
			}
		}
		string _State;

        [Column] 
		public string City 
		{ 
			get
			{
				return _City;
			}
			set
			{
				_City = value;
				MarkColumnModified("City");
			}
		}
		string _City;

        [Column] 
		public string Country 
		{ 
			get
			{
				return _Country;
			}
			set
			{
				_Country = value;
				MarkColumnModified("Country");
			}
		}
		string _Country;

	}
    
	[TableName("vIAmAView")]
	[ExplicitColumns]
    public partial class vIAmAView : ChinookDB.Record<vIAmAView>  
    {
        [Column] 
		public int TrackId 
		{ 
			get
			{
				return _TrackId;
			}
			set
			{
				_TrackId = value;
				MarkColumnModified("TrackId");
			}
		}
		int _TrackId;

        [Column] 
		public string Name 
		{ 
			get
			{
				return _Name;
			}
			set
			{
				_Name = value;
				MarkColumnModified("Name");
			}
		}
		string _Name;

        [Column] 
		public int? AlbumId 
		{ 
			get
			{
				return _AlbumId;
			}
			set
			{
				_AlbumId = value;
				MarkColumnModified("AlbumId");
			}
		}
		int? _AlbumId;

        [Column] 
		public int MediaTypeId 
		{ 
			get
			{
				return _MediaTypeId;
			}
			set
			{
				_MediaTypeId = value;
				MarkColumnModified("MediaTypeId");
			}
		}
		int _MediaTypeId;

        [Column] 
		public int? GenreId 
		{ 
			get
			{
				return _GenreId;
			}
			set
			{
				_GenreId = value;
				MarkColumnModified("GenreId");
			}
		}
		int? _GenreId;

        [Column] 
		public string Composer 
		{ 
			get
			{
				return _Composer;
			}
			set
			{
				_Composer = value;
				MarkColumnModified("Composer");
			}
		}
		string _Composer;

        [Column] 
		public int Milliseconds 
		{ 
			get
			{
				return _Milliseconds;
			}
			set
			{
				_Milliseconds = value;
				MarkColumnModified("Milliseconds");
			}
		}
		int _Milliseconds;

        [Column] 
		public int? Bytes 
		{ 
			get
			{
				return _Bytes;
			}
			set
			{
				_Bytes = value;
				MarkColumnModified("Bytes");
			}
		}
		int? _Bytes;

        [Column] 
		public decimal UnitPrice 
		{ 
			get
			{
				return _UnitPrice;
			}
			set
			{
				_UnitPrice = value;
				MarkColumnModified("UnitPrice");
			}
		}
		decimal _UnitPrice;

	}
    
	[TableName("Album")]
	[PrimaryKey("AlbumId")]
	[ExplicitColumns]
    public partial class Album : ChinookDB.Record<Album>  
    {
        [Column] 
		public int AlbumId 
		{ 
			get
			{
				return _AlbumId;
			}
			set
			{
				_AlbumId = value;
				MarkColumnModified("AlbumId");
			}
		}
		int _AlbumId;

        [Column] 
		public string Title 
		{ 
			get
			{
				return _Title;
			}
			set
			{
				_Title = value;
				MarkColumnModified("Title");
			}
		}
		string _Title;

        [Column] 
		public int ArtistId 
		{ 
			get
			{
				return _ArtistId;
			}
			set
			{
				_ArtistId = value;
				MarkColumnModified("ArtistId");
			}
		}
		int _ArtistId;

	}
    
	[TableName("Artist")]
	[PrimaryKey("ArtistId")]
	[ExplicitColumns]
    public partial class Artist : ChinookDB.Record<Artist>  
    {
        [Column] 
		public int ArtistId 
		{ 
			get
			{
				return _ArtistId;
			}
			set
			{
				_ArtistId = value;
				MarkColumnModified("ArtistId");
			}
		}
		int _ArtistId;

        [Column] 
		public string Name 
		{ 
			get
			{
				return _Name;
			}
			set
			{
				_Name = value;
				MarkColumnModified("Name");
			}
		}
		string _Name;

	}
}


